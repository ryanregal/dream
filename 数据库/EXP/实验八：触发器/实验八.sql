CREATE TABLE Teacher(
    ID CHAR(5) PRIMARY KEY,
    JOB VARCHAR(20) NOT NULL,
    SAL NUMBER(7,2)
);
INSERT INTO Teacher VALUES ('10001','教授',3800);
INSERT INTO Teacher VALUES ('10002','教授',4100);
INSERT INTO Teacher VALUES ('10003','副教授',3500);
INSERT INTO Teacher VALUES ('10004','助理教授',3000);

 /*触发事件是插入或更新操作*/
CREATE OR REPLACE FUNCTION tri_teacher_insert_func1() 
RETURNS TRIGGER AS $$ DECLARE
BEGIN
IF (new.Job='教授') AND (new.Sal < 4000) THEN 
new.Sal :=4000; 
END IF;
RETURN NEW;
END;
$$LANGUAGE PLPGSQL;

CREATE TRIGGER Insert_Or_Update_Sal  BEFORE INSERT OR UPDATE ON Teacher 
FOR EACH ROW EXECUTE PROCEDURE tri_teacher_insert_func1(); 

INSERT INTO Teacher VALUES ('10005','教授',3999);
INSERT INTO Teacher VALUES ('10006','教授',4000);
UPDATE Teacher SET SAL=3900 WHERE Teacher.ID='10002';
SELECT *FROM Teacher;

CREATE TABLE SC_U(
    Sno CHAR(9), FOREIGN KEY(Sno) REFERENCES Student(Sno),
    Cno CHAR(4), FOREIGN KEY(Cno) REFERENCES Course(Cno),
    Oldgrade INTeger(3),
    Newgrade INTeger(3)
);
SELECT*FROM SC_U;
\d+ SC_U;

INSERT INTO STUDENT VALUES('201215122','Regina','f','19','Literature');
INSERT INTO STUDENT VALUES('201215121','Emma','f','18','Cs')INSERT INTO COURSE VALUES('2','Math','n',1);
INSERT INTO COURSE VALUES('1','English','1',2);
INSERT INTO COURSE VALUES('2','Math','1',2);
INSERT INTO SC VALUES('201215122','2',80);
INSERT INTO SC VALUES('201215121','2',70);

/*引用变量，分别表示修改前和修改后 有FOR EACH ROW可以用*/
CREATE OR REPLACE FUNCTION tri_func2() 
RETURNS TRIGGER AS $$ DECLARE
BEGIN
IF (new.Grade>=1.1*Old.Grade) THEN 
INSERT INTO SC_U(Sno,Cno,OldGrade,NewGrade)
Values(Old.Sno,Old.Cno,Old.Grade,New.Grade);
END IF;
RETURN NEW;
END;
$$LANGUAGE PLPGSQL;

CREATE TRIGGER SC_AFTER_UPDATE  AFTER UPDATE OF GRADE ON SC 
FOR EACH ROW EXECUTE PROCEDURE tri_func2();

UPDATE SC SET GRADE=100  WHERE SNO='201215122' AND CNO='2';
UPDATE SC SET GRADE=90  WHERE SNO='201215121' AND CNO='2';
SELECT *FROM SC_U;

SELECT * FROM pg_trigger;

ALTER TABLE SC DISABLE TRIGGER SC_AFTER_UPDATE;
Drop Table SC_U;
CREATE TABLE SC_U(
    Sno CHAR(9), FOREIGN KEY(Sno) REFERENCES Student(Sno),
    Cno CHAR(4), FOREIGN KEY(Cno) REFERENCES Course(Cno),
    Oldgrade INTeger(3),
    Newgrade INTeger(3)
);

UPDATE SC SET GRADE=80  WHERE SNO='201215122' AND CNO='2';
UPDATE SC SET GRADE=70  WHERE SNO='201215121' AND CNO='2';
Select *FROM SC;
UPDATE SC SET GRADE=100  WHERE SNO='201215122' AND CNO='2';
UPDATE SC SET GRADE=90  WHERE SNO='201215121' AND CNO='2';
Select *FROM SC;
SELECT *FROM SC_U;

DROP TRIGGER SC_AFTER_UPDATE ON SC;
DROP TRIGGER Insert_Or_Update_Sal ON Teacher;








